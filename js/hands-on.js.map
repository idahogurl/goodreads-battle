{"version":3,"sources":["../hands-on.jsx"],"names":["ReactDOM","render","React","Component","Redux","createStore","applyMiddleware","compose","ReactRedux","Provider","connect","apiKey","getXml2Js","x2js","X2JS","xml2js","xml","newUser","username","name","imageUrl","id","location","read","currentlyReading","wantToRead","initialState","user1","Object","assign","user2","generateUser","user","GoodreadsResponse","user_name","image_url","parseInt","user_shelves","user_shelf","book_count","toString","fetchUser","requestString","axios","get","then","response","data","User","userNumber","props","winner","status","toLowerCase","UserInfo","backgroundImage","UserInput","handleChange","bind","e","Profiles","runBattle","target","blur"],"mappings":";;;;;;;;;;gBAAmBA,Q;IAAXC,M,aAAAA,M;aACcC,K;IAAdC,S,UAAAA,S;aAC0CC,K;IAA1CC,W,UAAAA,W;IAAaC,e,UAAAA,e;IAAiBC,O,UAAAA,O;kBACRC,U;IAAtBC,Q,eAAAA,Q;IAAUC,O,eAAAA,O;;;AAElB,IAAMC,SAAS,uBAAf;;AAEA;;AAEA;;AAEA,IAAMC,YAAY,SAAZA,SAAY,MAAO;AACvB,MAAMC,OAAO,IAAIC,IAAJ,EAAb;AACA,SAAOD,KAAKE,MAAL,CAAYC,GAAZ,CAAP;AACD,CAHD;;AAKA,IAAMC,UAAU;AACdC,YAAU,EADI;AAEdC,QAAM,EAFQ;AAGdC,YAAU,4FAHI;AAIdC,MAAI,CAJU;AAKdC,YAAU,EALI,EAKA;AACdC,QAAM,CANQ;AAOdC,oBAAkB,CAPJ;AAQdC,cAAY;AARE,CAAhB;;AAWA,IAAMC,eAAe;AACnBC,SAAOC,OAAOC,MAAP,CAAc,EAAd,EAAmBZ,OAAnB,CADY;AAEnBa,SAAOF,OAAOC,MAAP,CAAc,EAAd,EAAmBZ,OAAnB;AAFY,CAArB;;AAKA,IAAMc,eAAe,SAAfA,YAAe,OACrB;AACE,MAAMd,UAAUe,KAAKC,iBAAL,CAAuBD,IAAvC;AACA,SAAO;AACHd,cAAUD,QAAQiB,SADf;AAEHf,UAAMF,QAAQE,IAFX;AAGHC,cAAUH,QAAQkB,SAHf;AAIHd,QAAIJ,QAAQI,EAJT;AAKHC,cAAUL,QAAQK,QALf;AAMHC,UAAMa,SAASnB,QAAQoB,YAAR,CAAqBC,UAArB,CAAgC,CAAhC,EAAmCC,UAAnC,CAA8CC,QAA9C,EAAT,CANH;AAOHhB,sBAAkBY,SAASnB,QAAQoB,YAAR,CAAqBC,UAArB,CAAgC,CAAhC,EAAmCC,UAAnC,CAA8CC,QAA9C,EAAT,CAPf;AAQHf,gBAAYW,SAASnB,QAAQoB,YAAR,CAAqBC,UAArB,CAAgC,CAAhC,EAAmCC,UAAnC,CAA8CC,QAA9C,EAAT;AART,GAAP;AAUD,CAbD;;AAeA,IAAMC,YAAY,SAAZA,SAAY,CAACvB,QAAD,EAAc;AAC9B;AACA,MAAIwB,gBACF,0CACA,MADA,GAEA/B,MAFA,GAGA,GAHA,GAIA,WAJA,GAKAO,QALA,GAMA,aAPF;;AASA,SAAOyB,MAAMC,GAAN,CAAUF,aAAV,EACJG,IADI,CACC,oBAAY;AAChB,QAAMb,OAAOpB,UAAUkC,SAASC,IAAnB,CAAb;AACA,WAAOhB,aAAaC,IAAb,CAAP;AACD,GAJI,CAAP;AAKD,CAhBD;;AAkBA;;IAEMgB,I;;;;;;;;;;;6BACK;AACP,UAAMC,aAAa,KAAKC,KAAL,CAAWD,UAA9B;AACA,UAAME,SAAS,KAAKD,KAAL,CAAWvB,KAAX,CAAiBJ,IAAjB,GAAwB,KAAK2B,KAAL,CAAWpB,KAAX,CAAiBP,IAAzC,GAAgD,CAAhD,GAAoD,CAAnE;AACA,UAAM6B,SAASH,eAAeE,MAAf,GAAuB,QAAvB,GAAiC,OAAhD;AACA,aACE;AAAA;AAAA,UAAK,WAAU,qBAAf;AACE;AAAA;AAAA,YAAK,WAAU,YAAf;AACE;AAAA;AAAA,cAAK,WAAU,WAAf;AACE;AAAA;AAAA,gBAAI,WAAWC,OAAOC,WAAP,EAAf;AAAsCD;AAAtC,aADF;AAEE,gCAAC,QAAD,EAAc,KAAKF,KAAnB;AAFF,WADF;AAKE;AAAA;AAAA,cAAK,WAAU,aAAf;AACE,gCAAC,SAAD,EAAe,KAAKA,KAApB;AADF;AALF;AADF,OADF;AAaD;;;;EAlBgB/C,S;;IAqBbmD,Q;;;AACJ,sBAAc;AAAA;;AAAA;AAEb;;;;6BAEQ;AAAA,mBAEH,KAAKJ,KAAL,CAAW,SAAS,KAAKA,KAAL,CAAWD,UAA/B,CAFG;AAAA,UACC9B,IADD,UACCA,IADD;AAAA,UACOG,QADP,UACOA,QADP;AAAA,UACiBC,IADjB,UACiBA,IADjB;AAAA,UACuBC,gBADvB,UACuBA,gBADvB;AAAA,UACyCC,UADzC,UACyCA,UADzC;AAAA,UACqDL,QADrD,UACqDA,QADrD;;AAGP,aACE;AAAA;AAAA;AACE,qCAAK,WAAU,YAAf,EAA4B,OAAO,EAACmC,0BAAwBnC,QAAxB,MAAD,EAAnC,GADF;AAEE;AAAA;AAAA,YAAK,WAAU,WAAf;AAAA;AACSD,cADT;AACc,yCADd;AAAA;AAEaG,kBAFb;AAEsB,yCAFtB;AAAA;AAGSC,cAHT;AAGc,yCAHd;AAAA;AAIsBC,0BAJtB;AAIuC,yCAJvC;AAAA;AAKiBC;AALjB;AAFF,OADF;AAYD;;;;EApBoBtB,S;;IAuBjBqD,S;;;AACJ,uBAAc;AAAA;;AAAA;;AAEZ,WAAKC,YAAL,GAAoB,OAAKA,YAAL,CAAkBC,IAAlB,QAApB;AAFY;AAGb;;;;iCAEYC,C,EAAG;AACd;AACD;;;6BAEQ;AACP,aACE,+BAAO,MAAK,MAAZ,EAAmB,IAAI,KAAKT,KAAL,CAAWD,UAAlC,EAA8C,UAAU,KAAKQ,YAA7D,EAA2E,aAAY,cAAvF,GADF;AAGD;;;;EAdqBtD,S;;IAiBlByD,Q;;;AACJ,sBAAc;AAAA;;AAAA;;AAEZ,WAAKC,SAAL,GAAiB,OAAKA,SAAL,CAAeH,IAAf,QAAjB;AAFY;AAGb;;;;8BAESC,C,EAAG;AACX;;AAEAA,QAAEG,MAAF,CAASC,IAAT;AACD;;AAED;;;;6BACS;AACP,aACE;AAAA;AAAA,UAAK,WAAU,aAAf;AACE;AAAA;AAAA,YAAK,WAAU,yCAAf;AACE;AAAA;AAAA;AACE,gCAAC,IAAD;AADF,WADF;AAIE;AAAA;AAAA;AACE,gCAAC,IAAD;AADF;AAJF,SADF;AASE;AAAA;AAAA,YAAQ,SAAS,KAAKF,SAAtB,EAAiC,WAAU,iBAA3C;AAAA;AAAA;AATF,OADF;AAaD;;;;EA3BoB1D,S;;AA8BvB;;AAGA","file":"hands-on.js","sourcesContent":["const { render } = ReactDOM;\nconst { Component } = React;\nconst { createStore, applyMiddleware, compose } = Redux;\nconst { Provider, connect } = ReactRedux;\n\nconst apiKey = '6eoeJFquKDi5FAsBFdqGg';\n\n/* Actions here */\n\n/* Reducer here */\n\nconst getXml2Js = xml => {\n  const x2js = new X2JS();\n  return x2js.xml2js(xml);\n};\n\nconst newUser = {\n  username: '',\n  name: '',\n  imageUrl: 'https://s.gr-assets.com/assets/nophoto/user/f_111x148-8060b12280b2aec7543bafb574ee8422.png',\n  id: 0,\n  location: '', //user.location,\n  read: 0,\n  currentlyReading: 0,\n  wantToRead: 0\n};\n\nconst initialState = {\n  user1: Object.assign({} , newUser),\n  user2: Object.assign({} , newUser)\n};\n\nconst generateUser = user =>\n{\n  const newUser = user.GoodreadsResponse.user;\n  return {\n      username: newUser.user_name,\n      name: newUser.name,\n      imageUrl: newUser.image_url,\n      id: newUser.id,\n      location: newUser.location,\n      read: parseInt(newUser.user_shelves.user_shelf[0].book_count.toString()),\n      currentlyReading: parseInt(newUser.user_shelves.user_shelf[1].book_count.toString()),\n      wantToRead: parseInt(newUser.user_shelves.user_shelf[2].book_count.toString())\n    };\n};\n\nconst fetchUser = (username) => {\n  //https://www.goodreads.com/user/show/?key=6eoeJFquKDi5FAsBFdqGg&username=1676869-rebecca&format=xml //get user info\n  var requestString =\n    'https://www.goodreads.com/user/show/?' +\n    'key=' +\n    apiKey +\n    '&' +\n    'username=' +\n    username +\n    '&format=xml';\n\n  return axios.get(requestString)\n    .then(response => {\n      const user = getXml2Js(response.data);\n      return generateUser(user);\n    });\n};\n\n/*Mapping functions here*/\n\nclass User extends Component {\n  render() {\n    const userNumber = this.props.userNumber;\n    const winner = this.props.user1.read > this.props.user2.read ? 1 : 2;\n    const status = userNumber === winner? 'Winner': 'Loser';\n    return (\n      <div className='card user-container'>\n        <div className='card-block'>\n          <div className='card-text'>\n            <h2 className={status.toLowerCase()}>{status}</h2>\n            <UserInfo {...this.props}/>\n          </div>\n          <div className='card-footer'>\n            <UserInput {...this.props}/>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nclass UserInfo extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    const { name, location, read, currentlyReading, wantToRead, imageUrl }\n      = this.props['user' + this.props.userNumber];\n    return (\n      <div>\n        <div className='user-image' style={{backgroundImage: `url(${imageUrl})`}}/>\n        <div className='user-info'>\n          Name: {name}<br/>\n          Location: {location}<br/>\n          Read: {read}<br/>\n          Currently Reading: {currentlyReading}<br/>\n          Want to Read: {wantToRead}\n        </div>\n      </div>\n    );\n  }\n}\n\nclass UserInput extends Component {\n  constructor() {\n    super();\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(e) {\n    //e.target has the value and the id of the text input. The id is the user id\n  }\n\n  render() {\n    return (\n      <input type='text' id={this.props.userNumber} onChange={this.handleChange} placeholder='Enter a name'/>\n    );\n  }\n}\n\nclass Profiles extends Component {\n  constructor() {\n    super();\n    this.runBattle = this.runBattle.bind(this);\n  }\n\n  runBattle(e) {\n    /* Action call to get users */\n\n    e.target.blur();\n  }\n\n  /*Get data to User components */\n  render() {\n    return (\n      <div className='text-center'>\n        <div className='d-flex flex-wrap justify-content-center'>\n          <div>\n            <User />\n          </div>\n          <div>\n            <User />\n          </div>\n        </div>\n        <button onClick={this.runBattle} className='btn btn-default'>Battle</button>\n      </div>\n    );\n  }\n}\n\n/*Redux Store Here*/\n\n\n/*Render Here*/\n\n"]}